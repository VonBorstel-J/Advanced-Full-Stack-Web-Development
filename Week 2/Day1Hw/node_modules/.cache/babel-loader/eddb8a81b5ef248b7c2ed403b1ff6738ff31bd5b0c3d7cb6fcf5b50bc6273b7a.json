{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { ListGroup, ListGroupItem } from \"reactstrap\";\n// import { TodoData } from \"./TodoData\";\n// import \"./styles.css\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n\n// class Todos extends Component {\n//   handleToggle = (todo) => {\n//     const updatedTodoList = this.props.todolists.map((item) => {\n//       if (item.id === todo.id) {\n//         return { ...item, done: !item.done };\n//       }\n//       return item;\n//     });\n\n//     this.props.updateTodoList(updatedTodoList);\n//   };\n\n//   render() {\n//     return (\n//       <ListGroup>\n//         {this.props.todolists.map((todolist) => (\n//           <ListGroupItem\n//             key={todolist.id}\n//             tag=\"button\"\n//             onClick={() => this.props.handleNote(todolist.note)}\n//             className={`align-self-center py-2 w-50 ${\n//               todolist.done ? \"text-decoration-line-through\" : \"\"\n//             }`}\n//           >\n//             {todolist.text}\n//             <button\n//               className=\"btn btn-sm float-right\"\n//               onClick={() => this.handleToggle(todolist)}\n//             >\n//               {todolist.done ? (\n//                 <i className=\"fas fa-check text-success\"></i>\n//               ) : (\n//                 <i className=\"fas fa-check\"></i>\n//               )}\n//             </button>\n//           </ListGroupItem>\n//         ))}\n//         <ListGroupItem id=\"notebox\" className=\"border border-dark rounded m-5\">\n//           <div id=\"note\" className=\"mt-1 font-weight-bold text-dark\"></div>\n//           <button\n//             id=\"btn\"\n//             className=\"w-25 mt-2 align-self-center bg-warning border-0\"\n//             onClick={this.props.dismissNote}\n//           >\n//             Done\n//           </button>\n//         </ListGroupItem>\n//       </ListGroup>\n//     );\n//   }\n// }\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       TodoList1: TodoData.TodoList1 || [],\n//       TodoList2: TodoData.TodoList2 || [],\n//       TodoList3: TodoData.TodoList3 || [],\n//       TodoList4: TodoData.TodoList4 || [],\n//       TodoList5: TodoData.TodoList5 || [],\n//       TodoList6: TodoData.TodoList6 || [],\n//       TodoList7: TodoData.TodoList7 || [],\n//       newTodo: \"\", // New todo input\n//       todos: [], // Array to store todos\n//     };\n//   }\n\n//   handleNote = (note) => {\n//     document.getElementById(\"notebox\").style.visibility = \"visible\";\n//     document.getElementById(\"note\").innerHTML = note;\n//   };\n\n//   dismissNote = () => {\n//     document.getElementById(\"notebox\").style.visibility = \"hidden\";\n//     document.getElementById(\"note\").innerHTML = \"\";\n//   };\n//   updateTodoList = (updatedList) => {\n//     this.setState({\n//       TodoList1: updatedList,\n//     });\n//   };\n\n//   handleInputChange = (event) => {\n//     this.setState({ newTodo: event.target.value });\n//   };\n//   addTodo = (event) => {\n//     event.preventDefault();\n//     const { newTodo } = this.state;\n\n//     if (newTodo.trim() === \"\") {\n//       return;\n//     }\n\n//     const newTodoItem = {\n//       id: Date.now(),\n//       text: newTodo,\n//       done: false,\n//     };\n\n//     let d = new Date();\n//     let day = [\n//       \"Sunday\",\n//       \"Monday\",\n//       \"Tuesday\",\n//       \"Wednesday\",\n//       \"Thursday\",\n//       \"Friday\",\n//       \"Saturday\",\n//     ];\n//     let n = day[d.getDay()];\n\n//     this.setState((prevState) => ({\n//       [n]: [...prevState[n], newTodoItem], // Add newTodoItem to the respective day's todo list\n//       todos: [...prevState.todos, newTodoItem], // Add newTodoItem to the overall todos list\n//       newTodo: \"\",\n//     }));\n//   };\n//   render() {\n//     let d = new Date();\n//     let day = [\n//       \"Sunday\",\n//       \"Monday\",\n//       \"Tuesday\",\n//       \"Wednesday\",\n//       \"Thursday\",\n//       \"Friday\",\n//       \"Saturday\",\n//       \"Sunday\",\n//     ];\n//     let n = day[d.getDay()];\n\n//     let todo;\n//     if (n === \"Monday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList1}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Tuesday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList2}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Wednesday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList3}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Thursday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList4}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Friday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList5}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Saturday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList6}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Sunday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList7}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     }\n//     return (\n//       <div className=\"App\">\n//         <h1>\n//           <span className=\"d-flex justify-content-center text-warning\">\n//             {n}'s\n//           </span>\n//           Todo List\n//         </h1>\n//         {todo}\n//         <form onSubmit={this.addTodo}>\n//           {/* NewTodo input field */}\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"Enter a new todo...\"\n//               value={this.state.newTodo}\n//               onChange={this.handleInputChange}\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary\">\n//             Add Todo\n//           </button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["E:/Advanced-Full-Stack-Web-Development/Week 2/Day1Hw/src/App.js"],"sourcesContent":["// import React, { Component } from \"react\";\n// import { ListGroup, ListGroupItem } from \"reactstrap\";\n// import { TodoData } from \"./TodoData\";\n// import \"./styles.css\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n\n// class Todos extends Component {\n//   handleToggle = (todo) => {\n//     const updatedTodoList = this.props.todolists.map((item) => {\n//       if (item.id === todo.id) {\n//         return { ...item, done: !item.done };\n//       }\n//       return item;\n//     });\n\n//     this.props.updateTodoList(updatedTodoList);\n//   };\n\n//   render() {\n//     return (\n//       <ListGroup>\n//         {this.props.todolists.map((todolist) => (\n//           <ListGroupItem\n//             key={todolist.id}\n//             tag=\"button\"\n//             onClick={() => this.props.handleNote(todolist.note)}\n//             className={`align-self-center py-2 w-50 ${\n//               todolist.done ? \"text-decoration-line-through\" : \"\"\n//             }`}\n//           >\n//             {todolist.text}\n//             <button\n//               className=\"btn btn-sm float-right\"\n//               onClick={() => this.handleToggle(todolist)}\n//             >\n//               {todolist.done ? (\n//                 <i className=\"fas fa-check text-success\"></i>\n//               ) : (\n//                 <i className=\"fas fa-check\"></i>\n//               )}\n//             </button>\n//           </ListGroupItem>\n//         ))}\n//         <ListGroupItem id=\"notebox\" className=\"border border-dark rounded m-5\">\n//           <div id=\"note\" className=\"mt-1 font-weight-bold text-dark\"></div>\n//           <button\n//             id=\"btn\"\n//             className=\"w-25 mt-2 align-self-center bg-warning border-0\"\n//             onClick={this.props.dismissNote}\n//           >\n//             Done\n//           </button>\n//         </ListGroupItem>\n//       </ListGroup>\n//     );\n//   }\n// }\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       TodoList1: TodoData.TodoList1 || [],\n//       TodoList2: TodoData.TodoList2 || [],\n//       TodoList3: TodoData.TodoList3 || [],\n//       TodoList4: TodoData.TodoList4 || [],\n//       TodoList5: TodoData.TodoList5 || [],\n//       TodoList6: TodoData.TodoList6 || [],\n//       TodoList7: TodoData.TodoList7 || [],\n//       newTodo: \"\", // New todo input\n//       todos: [], // Array to store todos\n//     };\n//   }\n\n//   handleNote = (note) => {\n//     document.getElementById(\"notebox\").style.visibility = \"visible\";\n//     document.getElementById(\"note\").innerHTML = note;\n//   };\n\n//   dismissNote = () => {\n//     document.getElementById(\"notebox\").style.visibility = \"hidden\";\n//     document.getElementById(\"note\").innerHTML = \"\";\n//   };\n//   updateTodoList = (updatedList) => {\n//     this.setState({\n//       TodoList1: updatedList,\n//     });\n//   };\n\n//   handleInputChange = (event) => {\n//     this.setState({ newTodo: event.target.value });\n//   };\n//   addTodo = (event) => {\n//     event.preventDefault();\n//     const { newTodo } = this.state;\n\n//     if (newTodo.trim() === \"\") {\n//       return;\n//     }\n\n//     const newTodoItem = {\n//       id: Date.now(),\n//       text: newTodo,\n//       done: false,\n//     };\n\n//     let d = new Date();\n//     let day = [\n//       \"Sunday\",\n//       \"Monday\",\n//       \"Tuesday\",\n//       \"Wednesday\",\n//       \"Thursday\",\n//       \"Friday\",\n//       \"Saturday\",\n//     ];\n//     let n = day[d.getDay()];\n\n//     this.setState((prevState) => ({\n//       [n]: [...prevState[n], newTodoItem], // Add newTodoItem to the respective day's todo list\n//       todos: [...prevState.todos, newTodoItem], // Add newTodoItem to the overall todos list\n//       newTodo: \"\",\n//     }));\n//   };\n//   render() {\n//     let d = new Date();\n//     let day = [\n//       \"Sunday\",\n//       \"Monday\",\n//       \"Tuesday\",\n//       \"Wednesday\",\n//       \"Thursday\",\n//       \"Friday\",\n//       \"Saturday\",\n//       \"Sunday\",\n//     ];\n//     let n = day[d.getDay()];\n\n//     let todo;\n//     if (n === \"Monday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList1}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Tuesday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList2}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Wednesday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList3}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Thursday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList4}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Friday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList5}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Saturday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList6}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     } else if (n === \"Sunday\") {\n//       todo = (\n//         <Todos\n//           todolists={this.state.TodoList7}\n//           handleNote={this.handleNote}\n//           dismissNote={this.dismissNote}\n//           updateTodoList={this.updateTodoList}\n//         />\n//       );\n//     }\n//     return (\n//       <div className=\"App\">\n//         <h1>\n//           <span className=\"d-flex justify-content-center text-warning\">\n//             {n}'s\n//           </span>\n//           Todo List\n//         </h1>\n//         {todo}\n//         <form onSubmit={this.addTodo}>\n//           {/* NewTodo input field */}\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"Enter a new todo...\"\n//               value={this.state.newTodo}\n//               onChange={this.handleInputChange}\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary\">\n//             Add Todo\n//           </button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}